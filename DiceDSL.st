Object subclass: #DiceHandle	instanceVariableNames: 'dice'	classVariableNames: ''	poolDictionaries: ''	category: 'Dice'!!DiceHandle methodsFor: 'initialization' stamp: 'EduardoPadoan 11/15/2017 14:26'!initialize	super initialize.	dice := OrderedCollection new.! !!DiceHandle methodsFor: 'accessing' stamp: 'EduardoPadoan 11/15/2017 14:28'!diceNumber	 ^ dice size! !!DiceHandle methodsFor: 'operations' stamp: 'EduardoPadoan 11/15/2017 15:48'!maxValue	| res |	res := 0.	dice do: [ :each | res := res + each faces ].	^ res! !!DiceHandle methodsFor: 'operations' stamp: 'EduardoPadoan 11/15/2017 16:10'!+ aDiceHandle 	| handle |	handle := self class new.	dice do: [ :each | handle addDie: each ].	aDiceHandle dice do: [ :each | handle addDie: each ].	^ handle! !!DiceHandle methodsFor: 'operations' stamp: 'EduardoPadoan 11/15/2017 14:38'!roll	| res |	res := 0.	dice do: [ :each | res := res + each roll ].	^ res! !!DiceHandle methodsFor: 'adding' stamp: 'EduardoPadoan 11/15/2017 14:27'!addDie: aDie 	dice add: aDie.! !!DiceHandle methodsFor: 'adding' stamp: 'EduardoPadoan 11/15/2017 16:09'!dice	^ dice! !Object subclass: #Die	instanceVariableNames: 'faces'	classVariableNames: ''	poolDictionaries: ''	category: 'Dice'!!Die commentStamp: 'EduardoPadoan 11/15/2017 14:13' prior: 0!I ́m a simple die.To create a die use	Die faces: 20!!Die methodsFor: 'printing' stamp: 'EduardoPadoan 11/15/2017 14:33'!printOn: aStream	super printOn: aStream.	aStream nextPutAll: ' (', faces printString, ')'! !!Die methodsFor: 'initialization' stamp: 'EduardoPadoan 11/15/2017 13:46'!initialize	super initialize.	faces := 6.! !!Die methodsFor: 'operations' stamp: 'EduardoPadoan 11/15/2017 14:10'!roll	^ faces atRandom ! !!Die methodsFor: 'accessing' stamp: 'EduardoPadoan 11/15/2017 14:19'!faces	^ faces! !!Die methodsFor: 'accessing' stamp: 'EduardoPadoan 11/15/2017 14:19'!faces: anInteger	faces := anInteger ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Die class	instanceVariableNames: ''!!Die class methodsFor: 'instance creation' stamp: 'EduardoPadoan 11/15/2017 14:17'!faces: anInteger	| d |	d := self new.	d faces: anInteger.	^ d! !TestCase subclass: #DieHandleTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dice'!!DieHandleTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 16:10'!testAddingHandles	| h |	h := 2 D20 + 3 D6.	self assert: h diceNumber equals: 5! !!DieHandleTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 15:50'!testMaxValue	| h |	h := DiceHandle new		addDie: (Die faces: 6);		addDie: (Die faces: 10); yourself.	self assert: h maxValue equals: 16! !!DieHandleTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 14:30'!testAddingTwiceTheSameDieIsOk	| h |	h := DiceHandle new		addDie: (Die faces: 6);		addDie: (Die faces: 6); yourself.	self assert: h diceNumber equals: 2! !!DieHandleTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 14:28'!testAdding	| h |	h := DiceHandle new		addDie: (Die faces: 6);		addDie: (Die faces: 10); yourself.	self assert: h diceNumber equals: 2! !!DieHandleTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 15:52'!testRoll	| h |	h := DiceHandle new		addDie: (Die faces: 6);		addDie: (Die faces: 10); yourself.	1000 timesRepeat: [ 		self assert: (h roll between: 1 and: h maxValue)]! !!DieHandleTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 15:59'!testNewSyntax	| h |	h := 2 D6.	self assert: h diceNumber equals: 2! !TestCase subclass: #DieTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dice'!!DieTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 13:52'!testInitilizeIsOk	self shouldnt: [ Die new ] raise: Error! !!DieTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 14:15'!testBetterCreationInterface	self shouldnt: [ Die faces: 20 ] raise: Error! !!DieTest methodsFor: 'tests' stamp: 'EduardoPadoan 11/15/2017 14:12'!testRolling	| d |	d := Die new.	1000 timesRepeat: 		[ self assert: (d roll between: 1 and: 6) ]! !PackageManifest subclass: #ManifestDice	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dice'!!ManifestDice commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestDice class	instanceVariableNames: ''!!ManifestDice class methodsFor: 'code-critics' stamp: 'EduardoPadoan 11/15/2017 15:59'!ruleRBUncommonMessageSendRuleV1FalsePositive	^ #(#(#(#RGPackage #(#Dice)) #'2017-11-15T15:59:46.62271-02:00') )! !'From Pharo6.0 of 13 May 2016 [Latest update: #60512] on 15 November 2017 at 4:30:51.59582 pm'!!Integer methodsFor: '*Dice' stamp: 'EduardoPadoan 11/15/2017 16:02'!D10	^ self D: 10! !'From Pharo6.0 of 13 May 2016 [Latest update: #60512] on 15 November 2017 at 4:30:51.595988 pm'!!Integer methodsFor: '*Dice' stamp: 'EduardoPadoan 11/15/2017 16:01'!D: aNumberOfFaces	| handle |	handle := DiceHandle new.	self timesRepeat: [ handle addDie: (Die faces: aNumberOfFaces ) ].	^ handle! !'From Pharo6.0 of 13 May 2016 [Latest update: #60512] on 15 November 2017 at 4:30:51.596096 pm'!!Integer methodsFor: '*Dice' stamp: 'EduardoPadoan 11/15/2017 16:02'!D8	^ self D: 8! !'From Pharo6.0 of 13 May 2016 [Latest update: #60512] on 15 November 2017 at 4:30:51.596192 pm'!!Integer methodsFor: '*Dice' stamp: 'EduardoPadoan 11/15/2017 16:01'!D6	^ self D: 6! !'From Pharo6.0 of 13 May 2016 [Latest update: #60512] on 15 November 2017 at 4:30:51.596297 pm'!!Integer methodsFor: '*Dice' stamp: 'EduardoPadoan 11/15/2017 16:02'!D4	^ self D: 4! !'From Pharo6.0 of 13 May 2016 [Latest update: #60512] on 15 November 2017 at 4:30:51.596392 pm'!!Integer methodsFor: '*Dice' stamp: 'EduardoPadoan 11/15/2017 16:02'!D20	^ self D: 20! !